 __  ____   __  ___ ___   _   _____   __
|  \/  \ \ / / |   \_ _| /_\ | _ \ \ / /
| |\/| |\ V /  | |) | | / _ \|   /\ V / 
|_|  |_| |_|   |___/___/_/ \_\_|_\ |_|
========================================
TODO, musings, etc
Fancy text: 
	http://patorjk.com/software/taag/
========================================

[X] Change client message syntax to reduce size:
	Rather than {"type":"order", "order":{whatever}}
	Just [Orders.TYPES.MOVE, {params}]

	Every order obviously has a type
		saves |"t":| (4 chars)
	These can be easily enumerated on both client and server
		saves a couple of quotes (2 chars)

	Shave the array syntax off entirely
		saves |[,]| (3 chars)
	Further, remove the curlies around the object 
		saves 2 chars, just 1 if using a new delimiter after the number
		yes, used the delimiter, it's just faster and safer

	NEW NEW SYNTAX:
		3|"param":"string","param2":num

	TOTAL SAVINGS:
		About 10 chars per message.
		Yay!

	NOTE: expect that most messages from client are orders, so the order types can just be among the message types.

	Object keys are compressed with an idPool, which allows nice looking names in other parts of the code. This seems to perform pretty well, see tests/message-compression for NUMBERS. Tried compressing further with a library, but it's just too slow for real time.
		Currently cutting message size almost in half for a typical UnitMove message, tested with fairly large large coordinates/gamestep/unit count

[ ] Seek better ways to encode large ints(coords).

[ ] Organize this god damn client holy shit.